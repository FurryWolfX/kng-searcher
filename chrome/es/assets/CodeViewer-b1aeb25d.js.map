{"version":3,"file":"CodeViewer-b1aeb25d.js","sources":["../../src/components/shared/CodeViewer.vue"],"sourcesContent":["<template>\r\n  <div class=\"border-2 code-editor\">\r\n    <div ref=\"editor\" class=\"full-width full-height\" />\r\n\r\n    <div class=\"code-editor__actions\">\r\n      <div class=\"inline-block\">\r\n        <copy-button round flat dense :custom-handler=\"copyContent\" />\r\n      </div>\r\n\r\n      <div class=\"inline-block\">\r\n        <q-btn icon=\"settings\" round flat dense>\r\n          <q-menu style=\"white-space: nowrap\" anchor=\"bottom right\" self=\"top end\">\r\n            <q-item dense class=\"q-pt-sm\">\r\n              <q-checkbox v-model=\"codeEditorStore.useSpaces\" size=\"32px\"\r\n                          dense\r\n                          :label=\"t('shared.code_editor.actions.whitespace.label')\"\r\n                          :title=\"t('shared.code_editor.actions.whitespace.title')\" />\r\n            </q-item>\r\n            <q-item dense class=\"q-pb-sm\">\r\n              <q-checkbox v-model=\"codeEditorStore.wrapLines\" size=\"32px\"\r\n                          dense\r\n                          :label=\"t('shared.code_editor.actions.wrap_lines.label')\"\r\n                          :title=\"t('shared.code_editor.actions.wrap_lines.title')\" />\r\n            </q-item>\r\n          </q-menu>\r\n        </q-btn>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\n  import { ref, toRef, Ref } from 'vue'\r\n  import { useCodeEditor } from '../../composables/CodeEditor'\r\n  import { useCodeEditorStore } from '../../store/codeEditor.ts'\r\n  import CopyButton from './CopyButton.vue'\r\n  import { useTranslation } from '../../composables/i18n'\r\n\r\n  const t = useTranslation()\r\n  const props = defineProps<{ value: string }>()\r\n\r\n  const codeEditorStore = useCodeEditorStore()\r\n\r\n  const editor: Ref<HTMLElement | null> = ref(null)\r\n  const { copyContent } = useCodeEditor(editor, {\r\n    readOnly: true,\r\n    initialValue: toRef(props, 'value')\r\n  })\r\n</script>\r\n"],"names":["useTranslation","codeEditorStore","useCodeEditorStore","editor","ref","copyContent","useCodeEditor","toRef","props"],"mappings":"qXAsCQ,EAAIA,IAGJC,EAAkBC,IAElBC,EAAkCC,EAAI,IAAI,EAC1C,CAAE,YAAAC,CAAA,EAAgBC,EAAcH,EAAQ,CAC5C,SAAU,GACV,aAAcI,EAAMC,EAAO,OAAO,CAAA,CACnC"}